<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Jg0pzvPYqAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="verSenha.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        +aGXSzzvYFNum9votrrNfKzvXAzRN5WfDfA4uUz87vox8Yo77khrORjJr+1teFveprftNrgtzR8FhunF
        EOul8irBXiTkueIlr7wc19XizjYPpPFCIp8SfzT3D7L53878f/4af62/x9/r1/Br+TVnf84/2oohgBpi
        CKCGGAKoIYYAaoghgBpiCKCGGAKoIYYAaoghgBpiCKCGGAKoIYYAaoghgBpiCKCGGAKoIYYAaoghgBpi
        CKCGGAKoIYYAaoghgBpiCKCGGAKoIYYAaoghgBpiCKCGGAKoIYYAaoghgBpiCKCGGAKoIYYAaoghgBpi
        CKCGGAKoIYYAaoghgBpiCKCGGAKoIYYAaoghgBpiCKCGGAKoIYYAaoghgBpiCKCGGAKoIYYAaoghgBpi
        CKCGGAKoIYYAaoghgBpiCKCGGAKoIYYAaoghgBpiCKCGGAKoIYYAaoghgBpiCKCGGAKoIYYAaoghgBpi
        CKCGGAKoIYYAaoghgBpiCKCGGAKoIYYAaoghgBpiCKCGGAKoIYYAaoghgBpiCKCGGAKoIYYAKrjtTr8D
        vebfAl/8+T8AAAAASUVORK5CYII=
</value>
  </data>
</root>